/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_H
#define T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_H

#include "t_test_debug_proto_test_types.h"

/* ServiceForExceptionWithAMap service interface */
typedef struct _TTestServiceForExceptionWithAMapIf TTestServiceForExceptionWithAMapIf;  /* dummy object */

struct _TTestServiceForExceptionWithAMapIfInterface
{
  GTypeInterface parent;

  gboolean (*method_that_throws_an_exception) (TTestServiceForExceptionWithAMapIf *iface, TTestExceptionWithAMap ** xwamap, GError **error);
};
typedef struct _TTestServiceForExceptionWithAMapIfInterface TTestServiceForExceptionWithAMapIfInterface;

GType t_test_service_for_exception_with_a_map_if_get_type (void);
#define T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_IF (t_test_service_for_exception_with_a_map_if_get_type())
#define T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_IF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_IF, TTestServiceForExceptionWithAMapIf))
#define T_TEST_IS_SERVICE_FOR_EXCEPTION_WITH_A_MAP_IF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_IF))
#define T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_IF_GET_INTERFACE(inst) (G_TYPE_INSTANCE_GET_INTERFACE ((inst), T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_IF, TTestServiceForExceptionWithAMapIfInterface))

gboolean t_test_service_for_exception_with_a_map_if_method_that_throws_an_exception (TTestServiceForExceptionWithAMapIf *iface, TTestExceptionWithAMap ** xwamap, GError **error);

/* ServiceForExceptionWithAMap service client */
struct _TTestServiceForExceptionWithAMapClient
{
  GObject parent;

  ThriftProtocol *input_protocol;
  ThriftProtocol *output_protocol;
};
typedef struct _TTestServiceForExceptionWithAMapClient TTestServiceForExceptionWithAMapClient;

struct _TTestServiceForExceptionWithAMapClientClass
{
  GObjectClass parent;
};
typedef struct _TTestServiceForExceptionWithAMapClientClass TTestServiceForExceptionWithAMapClientClass;

GType t_test_service_for_exception_with_a_map_client_get_type (void);
#define T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_CLIENT (t_test_service_for_exception_with_a_map_client_get_type())
#define T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_CLIENT, TTestServiceForExceptionWithAMapClient))
#define T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_CLIENT, TTestServiceForExceptionWithAMapClientClass))
#define T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_IS_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_CLIENT))
#define T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_IS_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_CLIENT))
#define T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), T_TEST_TYPE_SERVICE_FOR_EXCEPTION_WITH_A_MAP_CLIENT, TTestServiceForExceptionWithAMapClientClass))

gboolean t_test_service_for_exception_with_a_map_client_method_that_throws_an_exception (TTestServiceForExceptionWithAMapIf * iface, TTestExceptionWithAMap ** xwamap, GError ** error);
gboolean t_test_service_for_exception_with_a_map_client_send_method_that_throws_an_exception (TTestServiceForExceptionWithAMapIf * iface, GError ** error);
gboolean t_test_service_for_exception_with_a_map_client_recv_method_that_throws_an_exception (TTestServiceForExceptionWithAMapIf * iface, TTestExceptionWithAMap ** xwamap, GError ** error);
void service_for_exception_with_a_map_client_set_property (GObject *object, guint property_id, const GValue *value, GParamSpec *pspec);
void service_for_exception_with_a_map_client_get_property (GObject *object, guint property_id, GValue *value, GParamSpec *pspec);

#endif /* T_TEST_SERVICE_FOR_EXCEPTION_WITH_A_MAP_H */
